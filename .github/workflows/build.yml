name: Build NDK Ports

on:
  push:
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

jobs:
  detect-projects:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-projects.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true

      - name: Get project information
        id: get-projects
        run: |
          chmod +x gradlew
          # Run Gradle task to generate the JSON file
          ./gradlew -q exportProjectInfo -PndkPath=$ANDROID_NDK_HOME

          # Read the JSON and convert it to a single line with proper escaping
          matrix=$(cat build/ndkports-matrix.json | jq -c .)
          echo "matrix=${matrix}" >> "$GITHUB_OUTPUT"

          # Optional: Show the content for verification
          echo "Generated matrix configuration:"
          cat build/ndkports-matrix.json

  build:
    needs: detect-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.detect-projects.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Install Meson and Ninja
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
          pip install meson

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build ${{ matrix.name }}
        run: |
          ./gradlew :${{ matrix.name }}:buildPort \
            -PndkPath=$ANDROID_NDK_HOME \
            -Psigning.gnupg.keyName=${{ secrets.GPG_KEY_ID }} \
            -Psigning.gnupg.passphrase=${{ secrets.GPG_PASSPHRASE }}

      - name: Package artifacts
        run: |
          # Create a zip file from the build output
          mkdir -p build/distributions
          cd build
          zip -r distributions/${{ matrix.name }}-${{ matrix.version }}.zip port
          cd distributions
          # Generate checksums
          sha256sum ${{ matrix.name }}-${{ matrix.version }}.zip > ${{ matrix.name }}-${{ matrix.version }}.zip.sha256
          sha1sum ${{ matrix.name }}-${{ matrix.version }}.zip > ${{ matrix.name }}-${{ matrix.version }}.zip.sha1
          # Generate signature
          gpg --armor --detach-sign ${{ matrix.name }}-${{ matrix.version }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build-artifacts
          path: |
            build/distributions/${{ matrix.name }}-${{ matrix.version }}.zip
            build/distributions/${{ matrix.name }}-${{ matrix.version }}.zip.asc
            build/distributions/${{ matrix.name }}-${{ matrix.version }}.zip.sha1
            build/distributions/${{ matrix.name }}-${{ matrix.version }}.zip.sha256

  release:
    needs: [build, detect-projects]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    strategy:
      matrix: ${{fromJson(needs.detect-projects.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.name }}-build-artifacts
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/${{ matrix.name }}-*.zip
            artifacts/${{ matrix.name }}-*.asc
            artifacts/${{ matrix.name }}-*.sha1
            artifacts/${{ matrix.name }}-*.sha256
          tag_name: ${{ matrix.name }}-${{ matrix.version }}
          name: ${{ matrix.libName }} ${{ matrix.version }}
          body: |
            NDK Ports for ${{ matrix.libName }} version ${{ matrix.version }}

            This release contains the prebuilt libraries for Android NDK in the following architectures:
            - armeabi-v7a
            - arm64-v8a
            - x86
            - x86_64

            The artifacts include both minimal and full builds of the library, along with headers and static/dynamic libraries.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
